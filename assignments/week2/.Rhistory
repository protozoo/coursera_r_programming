## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
##complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
df = data.frame(id=integer(), nobs=integer())
for( i in id ){
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv = read.csv( filename )
clean = na.omit(csv)
n = length(clean)
df <- rbind( df, c( id=i, nobs=n))
}
colnames(df) <- c("id", "nobs")
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
##complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
df = data.frame(id=integer(), nobs=integer())
for( i in id ){
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv = read.csv( filename )
x <- csv[complete.cases(csv), ]
##clean = na.omit(csv)
n = length(x)
df <- rbind( df, c( id=i, nobs=n))
}
colnames(df) <- c("id", "nobs")
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
##complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
df
csv = read.csv("specdata/002.csv")
csv
class(csv)
x <- csv[complete.cases(csv), ]
x
length(df)
length(df[1])
dim(df)
dim(x)
dim(csv)
x
ncols(x)
ncol(x)
nrow(x)
complete <- function(directory, id = 1:332) {
df = data.frame(id=integer(), nobs=integer())
for( i in id ){
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv = read.csv( filename )
clean <- csv[complete.cases(csv), ]
##clean = na.omit(csv)
n = nrow(clean)
df <- rbind( df, c( id=i, nobs=n))
}
colnames(df) <- c("id", "nobs")
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
##complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
df = data.frame(id=integer(), nobs=integer())
for( i in id ){
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv = read.csv( filename )
clean <- csv[complete.cases(csv), ]
##clean = na.omit(csv)
n = nrow(clean)
df <- rbind( df, c( id=i, nobs=n))
}
colnames(df) <- c("id", "nobs")
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 3)
?corr
source("corr.R")
?cor
cor(1:10, 2:11)
cor(1:10, 1:10)
cor(1:10, 1:100)
cor(1:10, 2:11)
var(1:10)
var(1:11)
var(1:12)
var(1:9)
?complete
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
## Initialize variables
correlations <- vector()
## Loop over the passed id's
for(i in completes$id ) {
## Pad the i to create a filename
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## Load the data
data <- read.csv(filepath)
## Calculate and store the count of complete cases
completeCases <- data[complete.cases(data),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
debugSource('~/Documents/work/coursera_r/assignment_week2/corr.R')
debugSource('~/Documents/work/coursera_r/assignment_week2/corr.R')
complete
?complete
??complete
complete()
complete()
complete
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
correlations <- c()
## Loop over the passed id's
for(i in completes$id ) {
## Pad the i to create a filename
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## Load the data
data <- read.csv(filepath)
## Calculate and store the count of complete cases
completeCases <- data[complete.cases(data),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
correlations <- c()
## Loop over the passed id's
for(i in completes$id ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
## Load the data
csv <- read.csv(filepath)
## Calculate and store the count of complete cases
completeCases <- csv[complete.cases(csv),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
correlations <- c()
## Loop over the passed id's
for(i in completes$id ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
## Load the data
csv <- read.csv(filename)
## Calculate and store the count of complete cases
completeCases <- csv[complete.cases(csv),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed["id"] ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeCases <- csv[complete.cases(csv),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed["id"] ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeMonitors <- csv[complete.cases(csv),]
numComplete <- nrow(completeMonitors)
if( numComplete >= threshold ) {
correlations <- c(correlations, cor(completeMonitors$nitrate, completeMonitors$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed["id"] ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeMonitors <- csv[complete.cases(csv),]
numComplete <- nrow(completeMonitors)
if( numComplete >= threshold ) {
correlations <- c(correlations, cor(completeMonitors$nitrate, completeMonitors$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed["id"] ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeCases <- csv[complete.cases(csv),]
count <- nrow(completeCases)
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed$id ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeCases <- csv[complete.cases(csv),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete(directory, 1:332)
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed$id ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeMonitors <- csv[complete.cases(csv),]
numComplete <- nrow(completeMonitors)
if( numComplete >= threshold ) {
correlations <- c(correlations, cor(completeMonitors$nitrate, completeMonitors$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
all <- complete( directory, 1:332 )
completed <- subset(all, nobs > threshold )
correlations <- c()
for(i in completed$id ) {
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
completeMonitors <- csv[complete.cases(csv),]
numComplete <- nrow(completeMonitors)
if( numComplete >= threshold ) {
correlations <- c(correlations, cor( completeMonitors$nitrate, completeMonitors$sulfate ) )
}
}
correlations
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/Documents/work/coursera_r/assignment_week2/complete.R')
submit()
complete <- function(directory, id = 1:332) {
df = data.frame(id=integer(), nobs=integer())
for( i in id ){
#filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csvfile <- sprintf("%03d.csv", id)
filename <- file.path(directory, csvfile)
csv = read.csv( filename )
clean <- csv[complete.cases(csv), ]
##clean = na.omit(csv)
n = nrow(clean)
df <- rbind( df, c( id=i, nobs=n))
}
colnames(df) <- c("id", "nobs")
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
submit()
submit()
sprintf("%03d.csv", 1)
sprintf("%03d.csv", 3)
sprintf("%03d.csv", 3)
submit()
submit()
submit()
submit()
submit()
?sprintf
pollutantmean <- function(directory, pollutant, id = 1:332) {
## a vector to concatenate the total results
total = c()
## iterate over id's
for( i in id ){
## build the file name to be laoded (CSV file) and read it
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv = read.csv( filename )
## get the requested column and remove NA values
column = csv[pollutant]
clean = column[!is.na(column)]
# concatenate this CSV values to the totals vector
total = c(total, clean)
}
## compute the mean value, and round it to 3 digits (to make it match the expected results example)
mean = mean(total)
round( mean, digits=3 )
}
pollutantmean("specdata", "sulfate", 1:10)
complete <- function(directory, id = 1:332)
{
## create an emtpy data frame to store the results
df = data.frame(id=integer(), nobs=integer())
## iterate over id's
for( i in id ){
## build the file name and file path
## (this time i did it differently, based on some examples found in the internet,
## since one of the unit tests didn't pass for some unknown reason)
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## read the data file and remove NA values
csv = read.csv( filepath )
clean <- csv[complete.cases(csv), ]
## get number of rows and store it along the file ID in the results dataframe
n = nrow(clean)
df <- rbind( df, c( id=i, nobs=n))
}
## make sure the data frame columns are correctly named
## (looks like rbind removes it, not sure why...)
colnames(df) <- c("id", "nobs")
## return the dataframe
df
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
corr <- function(directory, threshold = 0)
{
## create a vector to hold the results
correlations <- c()
## get all files
all <- complete( directory, 1:332 )
## filter to get only the ones above threshold
completed <- subset( all, nobs > threshold )
## iterate over the ID column
for(i in completed$id )
{
## build file name and read it
filename = paste( directory, "/", formatC( i, digits=2, flag=0), ".csv", sep="" )
csv <- read.csv( filename )
## find the complete monitors & number of rows
completeMonitors <- csv[complete.cases(csv),]
numComplete <- nrow( completeMonitors )
## if above the threshold, add correlation value to the results vector
if( numComplete >= threshold ) {
correlations <- c(correlations, cor( completeMonitors$nitrate, completeMonitors$sulfate ) )
}
}
## return results vector
correlations
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
*Course:* R Programming
gl
?gl
gl(2, 8, labels = c("Control", "Treat"))
a = gl(2, 8, labels = c("Control", "Treat"))
a
